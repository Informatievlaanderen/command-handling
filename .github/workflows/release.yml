name: Release

on:
  workflow_dispatch:

concurrency: Release

jobs:
  set-release-version:
    if: github.repository_owner == 'Informatievlaanderen'
    name: Decide next version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-version.outputs.version }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
          persist-credentials: false

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'

    - name: Node version
      shell: bash
      run: node --version

    - name: Install NPM dependencies
      shell: bash
      run: npm ci

    - name: Run Semantic Release Dry-Run
      shell: bash
      run: npx semantic-release --dry-run
      env:
        GITHUB_TOKEN: ${{ secrets.VBR_GIT_RELEASE_TOKEN }}
        GIT_COMMIT: ${{ github.sha }}
        GIT_USERNAME: ${{ secrets.VBR_GIT_USER }}
        GIT_AUTHOR_NAME: ${{ secrets.VBR_GIT_USER }}
        GIT_COMMITTER_NAME: ${{ secrets.VBR_GIT_USER }}
        GIT_EMAIL: ${{ secrets.VBR_GIT_EMAIL }}
        GIT_AUTHOR_EMAIL: ${{ secrets.VBR_GIT_EMAIL }}
        GIT_COMMITTER_EMAIL: ${{ secrets.VBR_GIT_EMAIL }}

    - name: Set Release Version
      id: set-version
      run: |
        [ ! -f semver ] && echo none > semver
        echo $(cat semver)
        echo ::set-output name=version::$(cat semver)
        echo RELEASE_VERSION=$(cat semver) >> $GITHUB_ENV
      shell: bash

  pack-aggregate-source:
    name: Pack Aggregate Source
    uses: Informatievlaanderen/build-pipeline/.github/workflows/pack.yml@main
    needs: [ set-release-version ]
    if: ${{ (github.repository_owner == 'Informatievlaanderen') && (needs.set-release-version.outputs.version != 'none') }}
    with:
      pack-file: Be.Vlaanderen.Basisregisters.AggregateSource
      test-project: Be.Vlaanderen.Basisregisters.AggregateSource.Tests
      build-project: Be.Vlaanderen.Basisregisters.AggregateSource
      semver: ${{ needs.set-release-version.outputs.version }}
      dotnet-version: ${{ vars.VBR_DOTNET_VERSION_8 }}
    secrets: inherit

  pack-aggregate-source-explicit-routing:
    name: Pack Aggregate Source Explicit Routing
    uses: Informatievlaanderen/build-pipeline/.github/workflows/pack.yml@main
    needs: [ set-release-version ]
    if: ${{ (github.repository_owner == 'Informatievlaanderen') && (needs.set-release-version.outputs.version != 'none') }}
    with:
      pack-file: Be.Vlaanderen.Basisregisters.AggregateSource.ExplicitRouting
      build-project: Be.Vlaanderen.Basisregisters.AggregateSource.ExplicitRouting
      semver: ${{ needs.set-release-version.outputs.version }}
      dotnet-version: ${{ vars.VBR_DOTNET_VERSION_8 }}
    secrets: inherit

  pack-aggregate-source-sql-stream-store:
    name: Pack Aggregate Source SqlStreamStore
    uses: Informatievlaanderen/build-pipeline/.github/workflows/pack.yml@main
    needs: [ set-release-version ]
    if: ${{ (github.repository_owner == 'Informatievlaanderen') && (needs.set-release-version.outputs.version != 'none') }}
    with:
      pack-file: Be.Vlaanderen.Basisregisters.AggregateSource.SqlStreamStore
      test-project: Be.Vlaanderen.Basisregisters.AggregateSource.SqlStreamStore.Tests
      build-project: Be.Vlaanderen.Basisregisters.AggregateSource.SqlStreamStore
      semver: ${{ needs.set-release-version.outputs.version }}
      dotnet-version: ${{ vars.VBR_DOTNET_VERSION_8 }}
    secrets: inherit

  pack-aggregate-source-sql-stream-store-autofac:
    name: Pack Aggregate Source SqlStreamStore Autofac
    uses: Informatievlaanderen/build-pipeline/.github/workflows/pack.yml@main
    needs: [ set-release-version ]
    if: ${{ (github.repository_owner == 'Informatievlaanderen') && (needs.set-release-version.outputs.version != 'none') }}
    with:
      pack-file: Be.Vlaanderen.Basisregisters.AggregateSource.SqlStreamStore.Autofac
      build-project: Be.Vlaanderen.Basisregisters.AggregateSource.SqlStreamStore.Autofac
      semver: ${{ needs.set-release-version.outputs.version }}
      dotnet-version: ${{ vars.VBR_DOTNET_VERSION_8 }}
    secrets: inherit

  pack-aggregate-source-testing:
    name: Pack Aggregate Source Testing
    uses: Informatievlaanderen/build-pipeline/.github/workflows/pack.yml@main
    needs: [ set-release-version ]
    if: ${{ (github.repository_owner == 'Informatievlaanderen') && (needs.set-release-version.outputs.version != 'none') }}
    with:
      pack-file: Be.Vlaanderen.Basisregisters.AggregateSource.Testing
      test-project: Be.Vlaanderen.Basisregisters.AggregateSource.Testing.Tests
      build-project: Be.Vlaanderen.Basisregisters.AggregateSource.Testing
      semver: ${{ needs.set-release-version.outputs.version }}
      dotnet-version: ${{ vars.VBR_DOTNET_VERSION_8 }}
    secrets: inherit

  pack-aggregate-source-testing-commandhandling:
    name: Pack Aggregate Source Testing CommandHandling
    uses: Informatievlaanderen/build-pipeline/.github/workflows/pack.yml@main
    needs: [ set-release-version ]
    if: ${{ (github.repository_owner == 'Informatievlaanderen') && (needs.set-release-version.outputs.version != 'none') }}
    with:
      pack-file: Be.Vlaanderen.Basisregisters.AggregateSource.Testing.CommandHandling
      build-project: Be.Vlaanderen.Basisregisters.AggregateSource.Testing.CommandHandling
      semver: ${{ needs.set-release-version.outputs.version }}
      dotnet-version: ${{ vars.VBR_DOTNET_VERSION_8 }}
    secrets: inherit

  pack-aggregate-source-testing-nunit:
    name: Pack Aggregate Source Testing NUnit
    uses: Informatievlaanderen/build-pipeline/.github/workflows/pack.yml@main
    needs: [ set-release-version ]
    if: ${{ (github.repository_owner == 'Informatievlaanderen') && (needs.set-release-version.outputs.version != 'none') }}
    with:
      pack-file: Be.Vlaanderen.Basisregisters.AggregateSource.Testing.NUnit
      build-project: Be.Vlaanderen.Basisregisters.AggregateSource.Testing.NUnit
      semver: ${{ needs.set-release-version.outputs.version }}
      dotnet-version: ${{ vars.VBR_DOTNET_VERSION_8 }}
    secrets: inherit

  pack-aggregate-source-testing-sql-stream-store:
    name: Pack Aggregate Source Testing SqlStreamStore
    uses: Informatievlaanderen/build-pipeline/.github/workflows/pack.yml@main
    needs: [ set-release-version ]
    if: ${{ (github.repository_owner == 'Informatievlaanderen') && (needs.set-release-version.outputs.version != 'none') }}
    with:
      pack-file: Be.Vlaanderen.Basisregisters.AggregateSource.Testing.SqlStreamStore
      build-project: Be.Vlaanderen.Basisregisters.AggregateSource.Testing.SqlStreamStore
      semver: ${{ needs.set-release-version.outputs.version }}
      dotnet-version: ${{ vars.VBR_DOTNET_VERSION_8 }}
    secrets: inherit

  pack-aggregate-source-testing-sql-stream-store-autofac:
    name: Pack Aggregate Source Testing SqlStreamStore Autofac
    uses: Informatievlaanderen/build-pipeline/.github/workflows/pack.yml@main
    needs: [ set-release-version ]
    if: ${{ (github.repository_owner == 'Informatievlaanderen') && (needs.set-release-version.outputs.version != 'none') }}
    with:
      pack-file: Be.Vlaanderen.Basisregisters.AggregateSource.Testing.SqlStreamStore.Autofac
      build-project: Be.Vlaanderen.Basisregisters.AggregateSource.Testing.SqlStreamStore.Autofac
      semver: ${{ needs.set-release-version.outputs.version }}
      dotnet-version: ${{ vars.VBR_DOTNET_VERSION_8 }}
    secrets: inherit

  pack-aggregate-source-testing-xunit:
    name: Pack Aggregate Source Testing Xunit
    uses: Informatievlaanderen/build-pipeline/.github/workflows/pack.yml@main
    needs: [ set-release-version ]
    if: ${{ (github.repository_owner == 'Informatievlaanderen') && (needs.set-release-version.outputs.version != 'none') }}
    with:
      pack-file: Be.Vlaanderen.Basisregisters.AggregateSource.Testing.Xunit
      build-project: Be.Vlaanderen.Basisregisters.AggregateSource.Testing.Xunit
      semver: ${{ needs.set-release-version.outputs.version }}
      dotnet-version: ${{ vars.VBR_DOTNET_VERSION_8 }}
    secrets: inherit

  pack-commandhandling:
    name: Pack CommandHandling
    uses: Informatievlaanderen/build-pipeline/.github/workflows/pack.yml@main
    needs: [ set-release-version ]
    if: ${{ (github.repository_owner == 'Informatievlaanderen') && (needs.set-release-version.outputs.version != 'none') }}
    with:
      pack-file: Be.Vlaanderen.Basisregisters.CommandHandling
      test-project: Be.Vlaanderen.Basisregisters.CommandHandling.Tests
      build-project: Be.Vlaanderen.Basisregisters.CommandHandling
      semver: ${{ needs.set-release-version.outputs.version }}
      dotnet-version: ${{ vars.VBR_DOTNET_VERSION_8 }}
    secrets: inherit

  pack-commandhandling-idempotency:
    name: Pack CommandHandling Idempotency
    uses: Informatievlaanderen/build-pipeline/.github/workflows/pack.yml@main
    needs: [ set-release-version ]
    if: ${{ (github.repository_owner == 'Informatievlaanderen') && (needs.set-release-version.outputs.version != 'none') }}
    with:
      pack-file: Be.Vlaanderen.Basisregisters.CommandHandling.Idempotency
      build-project: Be.Vlaanderen.Basisregisters.CommandHandling.Idempotency
      semver: ${{ needs.set-release-version.outputs.version }}
      dotnet-version: ${{ vars.VBR_DOTNET_VERSION_8 }}
    secrets: inherit

  pack-commandhandling-sql-stream-store:
    name: Pack CommandHandling SqlStreamStore
    uses: Informatievlaanderen/build-pipeline/.github/workflows/pack.yml@main
    needs: [ set-release-version ]
    if: ${{ (github.repository_owner == 'Informatievlaanderen') && (needs.set-release-version.outputs.version != 'none') }}
    with:
      pack-file: Be.Vlaanderen.Basisregisters.CommandHandling.SqlStreamStore
      build-project: Be.Vlaanderen.Basisregisters.CommandHandling.SqlStreamStore
      semver: ${{ needs.set-release-version.outputs.version }}
      dotnet-version: ${{ vars.VBR_DOTNET_VERSION_8 }}
    secrets: inherit

  pack-snapshot-verifier:
    name: Pack Snapshot Verifier
    uses: Informatievlaanderen/build-pipeline/.github/workflows/pack.yml@main
    needs: [ set-release-version ]
    if: ${{ (github.repository_owner == 'Informatievlaanderen') && (needs.set-release-version.outputs.version != 'none') }}
    with:
      pack-file: Be.Vlaanderen.Basisregisters.SnapshotVerifier
      test-project: Be.Vlaanderen.Basisregisters.SnapshotVerifier.Tests
      build-project: Be.Vlaanderen.Basisregisters.SnapshotVerifier
      semver: ${{ needs.set-release-version.outputs.version }}
      dotnet-version: ${{ vars.VBR_DOTNET_VERSION_8 }}
    secrets: inherit

  release:
    if: ${{ (github.repository_owner == 'Informatievlaanderen') && (needs.set-release-version.outputs.version != 'none') }}
    name: Semantic Release
    runs-on: ubuntu-latest
    needs: [
        set-release-version,
        pack-aggregate-source,
        pack-aggregate-source-explicit-routing,
        pack-aggregate-source-sql-stream-store,
        pack-aggregate-source-sql-stream-store-autofac,
        pack-aggregate-source-testing,
        pack-aggregate-source-testing-commandhandling,
        pack-aggregate-source-testing-nunit,
        pack-aggregate-source-testing-sql-stream-store,
        pack-aggregate-source-testing-sql-stream-store-autofac,
        pack-aggregate-source-testing-xunit,
        pack-commandhandling,
        pack-commandhandling-idempotency,
        pack-commandhandling-sql-stream-store,
        pack-snapshot-verifier
      ]
    outputs:
      version: ${{ steps.set-version.outputs.version }}
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
          persist-credentials: false

    - name: Cache NPM
      uses: actions/cache@v4
      env:
        cache-name: cache-npm
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-

    - name: Parse repository name
      run: echo REPOSITORY_NAME=$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' | sed -e "s/:refs//") >> $GITHUB_ENV
      shell: bash

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Node version
      shell: bash
      run: node --version

    - name: .NET version
      shell: bash
      run: dotnet --info

    - name: Python version
      shell: bash
      run: python --version

    - name: Install NPM dependencies
      shell: bash
      run: npm ci

    - name: Install Python dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install requests markdown argparse

    - name: Download NuGet Aggregate Source
      uses: actions/download-artifact@v4
      continue-on-error: false
      with:
        name: nuget-Be.Vlaanderen.Basisregisters.AggregateSource-${{ needs.set-release-version.outputs.version }}
        path: dist/nuget/

    - name: Download NuGet Aggregate Source Explicit Routing
      uses: actions/download-artifact@v4
      continue-on-error: false
      with:
        name: nuget-Be.Vlaanderen.Basisregisters.AggregateSource.ExplicitRouting-${{ needs.set-release-version.outputs.version }}
        path: dist/nuget/

    - name: Download NuGet Aggregate Source Sql Stream Store
      uses: actions/download-artifact@v4
      continue-on-error: false
      with:
        name: nuget-Be.Vlaanderen.Basisregisters.AggregateSource.SqlStreamStore-${{ needs.set-release-version.outputs.version }}
        path: dist/nuget/

    - name: Download NuGet Aggregate Source Sql Stream Store Autofac
      uses: actions/download-artifact@v4
      continue-on-error: false
      with:
        name: nuget-Be.Vlaanderen.Basisregisters.AggregateSource.SqlStreamStore.Autofac-${{ needs.set-release-version.outputs.version }}
        path: dist/nuget/

    - name: Download NuGet Aggregate Source Testing
      uses: actions/download-artifact@v4
      continue-on-error: false
      with:
        name: nuget-Be.Vlaanderen.Basisregisters.AggregateSource.Testing-${{ needs.set-release-version.outputs.version }}
        path: dist/nuget/

    - name: Download NuGet Aggregate Source Testing CommandHandling
      uses: actions/download-artifact@v4
      continue-on-error: false
      with:
        name: nuget-Be.Vlaanderen.Basisregisters.AggregateSource.Testing.CommandHandling-${{ needs.set-release-version.outputs.version }}
        path: dist/nuget/

    - name: Download NuGet Aggregate Source Testing NUnit
      uses: actions/download-artifact@v4
      continue-on-error: false
      with:
        name: nuget-Be.Vlaanderen.Basisregisters.AggregateSource.Testing.NUnit-${{ needs.set-release-version.outputs.version }}
        path: dist/nuget/

    - name: Download NuGet Aggregate Source Testing SqlStreamStore
      uses: actions/download-artifact@v4
      continue-on-error: false
      with:
        name: nuget-Be.Vlaanderen.Basisregisters.AggregateSource.Testing.SqlStreamStore-${{ needs.set-release-version.outputs.version }}
        path: dist/nuget/

    - name: Download NuGet Aggregate Source Testing SqlStreamStore Autofac
      uses: actions/download-artifact@v4
      continue-on-error: false
      with:
        name: nuget-Be.Vlaanderen.Basisregisters.AggregateSource.Testing.SqlStreamStore.Autofac-${{ needs.set-release-version.outputs.version }}
        path: dist/nuget/

    - name: Download NuGet Aggregate Source Testing Xunit
      uses: actions/download-artifact@v4
      continue-on-error: false
      with:
        name: nuget-Be.Vlaanderen.Basisregisters.AggregateSource.Testing.Xunit-${{ needs.set-release-version.outputs.version }}
        path: dist/nuget/

    - name: Download NuGet CommandHandling
      uses: actions/download-artifact@v4
      continue-on-error: false
      with:
        name: nuget-Be.Vlaanderen.Basisregisters.CommandHandling-${{ needs.set-release-version.outputs.version }}
        path: dist/nuget/

    - name: Download NuGet CommandHandling Idempotency
      uses: actions/download-artifact@v4
      continue-on-error: false
      with:
        name: nuget-Be.Vlaanderen.Basisregisters.CommandHandling.Idempotency-${{ needs.set-release-version.outputs.version }}
        path: dist/nuget/

    - name: Download NuGet CommandHandling SqlStreamStore
      uses: actions/download-artifact@v4
      continue-on-error: false
      with:
        name: nuget-Be.Vlaanderen.Basisregisters.CommandHandling.SqlStreamStore-${{ needs.set-release-version.outputs.version }}
        path: dist/nuget/

    - name: Download NuGet CommandHandling SnapshotVerifier
      uses: actions/download-artifact@v4
      continue-on-error: false
      with:
        name: nuget-Be.Vlaanderen.Basisregisters.SnapshotVerifier-${{ needs.set-release-version.outputs.version }}
        path: dist/nuget/

    - name: Run Semantic Release
      shell: bash
      run: npx semantic-release
      env:
        GITHUB_TOKEN: ${{ secrets.VBR_GIT_RELEASE_TOKEN }}
        GIT_COMMIT: ${{ github.sha }}
        GIT_USERNAME: ${{ secrets.VBR_GIT_USER }}
        GIT_AUTHOR_NAME: ${{ secrets.VBR_GIT_USER }}
        GIT_COMMITTER_NAME: ${{ secrets.VBR_GIT_USER }}
        GIT_EMAIL: ${{ secrets.VBR_GIT_EMAIL }}
        GIT_AUTHOR_EMAIL: ${{ secrets.VBR_GIT_EMAIL }}
        GIT_COMMITTER_EMAIL: ${{ secrets.VBR_GIT_EMAIL }}

    - name: Set Release Version
      id: set-version
      run: |
        [ ! -f semver ] && echo none > semver
        echo $(cat semver)
        echo ::set-output name=version::$(cat semver)
        echo RELEASE_VERSION=$(cat semver) >> $GITHUB_ENV
      shell: bash

  publish_to_nuget:
    needs: [ release ]
    if: ${{ (github.repository_owner == 'Informatievlaanderen') && (needs.release.outputs.version != 'none') }}
    name: Publish to NuGet
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ vars.VBR_DOTNET_VERSION_8 }}

    - name: .NET version
      shell: bash
      run: dotnet --info

    - name: Download NuGet Aggregate Source
      uses: actions/download-artifact@v4
      continue-on-error: false
      with:
        name: nuget-Be.Vlaanderen.Basisregisters.AggregateSource-${{ needs.set-release-version.outputs.version }}
        path: ~/

    - name: Download NuGet Aggregate Source Explicit Routing
      uses: actions/download-artifact@v4
      continue-on-error: false
      with:
        name: nuget-Be.Vlaanderen.Basisregisters.AggregateSource.ExplicitRouting-${{ needs.set-release-version.outputs.version }}
        path: ~/

    - name: Download NuGet Aggregate Source Sql Stream Store
      uses: actions/download-artifact@v4
      continue-on-error: false
      with:
        name: nuget-Be.Vlaanderen.Basisregisters.AggregateSource.SqlStreamStore-${{ needs.set-release-version.outputs.version }}
        path: ~/

    - name: Download NuGet Aggregate Source Sql Stream Store Autofac
      uses: actions/download-artifact@v4
      continue-on-error: false
      with:
        name: nuget-Be.Vlaanderen.Basisregisters.AggregateSource.SqlStreamStore.Autofac-${{ needs.set-release-version.outputs.version }}
        path: ~/

    - name: Download NuGet Aggregate Source Testing
      uses: actions/download-artifact@v4
      continue-on-error: false
      with:
        name: nuget-Be.Vlaanderen.Basisregisters.AggregateSource.Testing-${{ needs.set-release-version.outputs.version }}
        path: ~/

    - name: Download NuGet Aggregate Source Testing CommandHandling
      uses: actions/download-artifact@v4
      continue-on-error: false
      with:
        name: nuget-Be.Vlaanderen.Basisregisters.AggregateSource.Testing.CommandHandling-${{ needs.set-release-version.outputs.version }}
        path: ~/

    - name: Download NuGet Aggregate Source Testing NUnit
      uses: actions/download-artifact@v4
      continue-on-error: false
      with:
        name: nuget-Be.Vlaanderen.Basisregisters.AggregateSource.Testing.NUnit-${{ needs.set-release-version.outputs.version }}
        path: ~/

    - name: Download NuGet Aggregate Source Testing SqlStreamStore
      uses: actions/download-artifact@v4
      continue-on-error: false
      with:
        name: nuget-Be.Vlaanderen.Basisregisters.AggregateSource.Testing.SqlStreamStore-${{ needs.set-release-version.outputs.version }}
        path: ~/

    - name: Download NuGet Aggregate Source Testing SqlStreamStore Autofac
      uses: actions/download-artifact@v4
      continue-on-error: false
      with:
        name: nuget-Be.Vlaanderen.Basisregisters.AggregateSource.Testing.SqlStreamStore.Autofac-${{ needs.set-release-version.outputs.version }}
        path: ~/

    - name: Download NuGet Aggregate Source Testing Xunit
      uses: actions/download-artifact@v4
      continue-on-error: false
      with:
        name: nuget-Be.Vlaanderen.Basisregisters.AggregateSource.Testing.Xunit-${{ needs.set-release-version.outputs.version }}
        path: ~/

    - name: Download NuGet CommandHandling
      uses: actions/download-artifact@v4
      continue-on-error: false
      with:
        name: nuget-Be.Vlaanderen.Basisregisters.CommandHandling-${{ needs.set-release-version.outputs.version }}
        path: ~/

    - name: Download NuGet CommandHandling Idempotency
      uses: actions/download-artifact@v4
      continue-on-error: false
      with:
        name: nuget-Be.Vlaanderen.Basisregisters.CommandHandling.Idempotency-${{ needs.set-release-version.outputs.version }}
        path: ~/

    - name: Download NuGet CommandHandling SqlStreamStore
      uses: actions/download-artifact@v4
      continue-on-error: false
      with:
        name: nuget-Be.Vlaanderen.Basisregisters.CommandHandling.SqlStreamStore-${{ needs.set-release-version.outputs.version }}
        path: ~/

    - name: Download NuGet CommandHandling SnapshotVerifier
      uses: actions/download-artifact@v4
      continue-on-error: false
      with:
        name: nuget-Be.Vlaanderen.Basisregisters.SnapshotVerifier-${{ needs.set-release-version.outputs.version }}
        path: ~/

    - name: Publish packages to NuGet
      shell: bash
      run: |
        dotnet nuget push ~/Be.Vlaanderen.Basisregisters.AggregateSource.$SEMVER.nupkg --source nuget.org --api-key $NUGET_API_KEY
        dotnet nuget push ~/Be.Vlaanderen.Basisregisters.AggregateSource.ExplicitRouting.$SEMVER.nupkg --source nuget.org --api-key $NUGET_API_KEY
        dotnet nuget push ~/Be.Vlaanderen.Basisregisters.AggregateSource.SqlStreamStore.$SEMVER.nupkg --source nuget.org --api-key $NUGET_API_KEY
        dotnet nuget push ~/Be.Vlaanderen.Basisregisters.AggregateSource.SqlStreamStore.Autofac.$SEMVER.nupkg --source nuget.org --api-key $NUGET_API_KEY
        dotnet nuget push ~/Be.Vlaanderen.Basisregisters.AggregateSource.Testing.$SEMVER.nupkg --source nuget.org --api-key $NUGET_API_KEY
        dotnet nuget push ~/Be.Vlaanderen.Basisregisters.AggregateSource.Testing.CommandHandling.$SEMVER.nupkg --source nuget.org --api-key $NUGET_API_KEY
        dotnet nuget push ~/Be.Vlaanderen.Basisregisters.AggregateSource.Testing.NUnit.$SEMVER.nupkg --source nuget.org --api-key $NUGET_API_KEY
        dotnet nuget push ~/Be.Vlaanderen.Basisregisters.AggregateSource.Testing.SqlStreamStore.$SEMVER.nupkg --source nuget.org --api-key $NUGET_API_KEY
        dotnet nuget push ~/Be.Vlaanderen.Basisregisters.AggregateSource.Testing.SqlStreamStore.Autofac.$SEMVER.nupkg --source nuget.org --api-key $NUGET_API_KEY
        dotnet nuget push ~/Be.Vlaanderen.Basisregisters.AggregateSource.Testing.Xunit.$SEMVER.nupkg --source nuget.org --api-key $NUGET_API_KEY
        dotnet nuget push ~/Be.Vlaanderen.Basisregisters.CommandHandling.$SEMVER.nupkg --source nuget.org --api-key $NUGET_API_KEY
        dotnet nuget push ~/Be.Vlaanderen.Basisregisters.CommandHandling.Idempotency.$SEMVER.nupkg --source nuget.org --api-key $NUGET_API_KEY
        dotnet nuget push ~/Be.Vlaanderen.Basisregisters.CommandHandling.SqlStreamStore.$SEMVER.nupkg --source nuget.org --api-key $NUGET_API_KEY
        dotnet nuget push ~/Be.Vlaanderen.Basisregisters.SnapshotVerifier.$SEMVER.nupkg --source nuget.org --api-key $NUGET_API_KEY
      env:
        SEMVER: ${{  needs.release.outputs.version }}
        WORKSPACE: ${{ github.workspace }}
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

  publish_to_atlassian:
    needs: [ release ]
    if: ${{ (github.repository_owner == 'Informatievlaanderen') && (needs.release.outputs.version != 'none') }}
    name: Publish to Atlassian
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Parse repository name
        run: echo REPOSITORY_NAME=$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' | sed -e "s/:refs//") >> $GITHUB_ENV
        shell: bash

      - name: Cache Paket
        uses: actions/cache@v4
        env:
          cache-name: cache-paket
        with:
          path: packages
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('paket.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Cache Python
        uses: actions/cache@v4
        env:
          cache-name: cache-pip
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-build-${{ env.cache-name }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install requests markdown argparse

      - name: Publish to Confluence
        shell: bash
        run: ./packages/Be.Vlaanderen.Basisregisters.Build.Pipeline/Content/ci-confluence.sh
        env:
          CONFLUENCE_TITLE: ${{ env.REPOSITORY_NAME }}
          CONFLUENCE_USERNAME: ${{ secrets.VBR_CONFLUENCE_USER }}
          CONFLUENCE_PASSWORD: ${{ secrets.VBR_CONFLUENCE_PASSWORD }}